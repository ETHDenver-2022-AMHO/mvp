{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getRandomNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandomResult",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomResult",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561001057600080fd5b50738c7382f9d8f56b33781fe506e897a4f1e2d1725560a05273326c977e6efc84e512bb9c30f76e30c160ed06fb6080527f6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4600155655af3107a400060025560805160a0516104be6100a160003960008181609c015261024b015260008181610138015261021c01526104be6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806342619f66146100515780637390c7861461006c57806394985ddd14610074578063dbdff2c114610089575b600080fd5b61005a60035481565b60405190815260200160405180910390f35b60035461005a565b610087610082366004610392565b610091565b005b61005a610114565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461010e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064015b60405180910390fd5b60035550565b6002546040516370a0823160e01b8152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561017f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a391906103b4565b10156102055760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060448201526a1dda5d1a0819985d58d95d60aa1b6064820152608401610105565b610213600154600254610218565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610288929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016102b5939291906103cd565b6020604051808303816000875af11580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610439565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610352906001610462565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b600080604083850312156103a557600080fd5b50508035926020909101359150565b6000602082840312156103c657600080fd5b5051919050565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b8181101561040f578581018301518582016080015282016103f3565b81811115610421576000608083870101525b50601f01601f19169290920160800195945050505050565b60006020828403121561044b57600080fd5b8151801515811461045b57600080fd5b9392505050565b6000821982111561048357634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220ebd800819446bf106c90c472150510a201a9c5eea710c2784039d2db8ab6a67864736f6c634300080f0033",
    "sourceMap": "360:1642:3:-:0;;;939:391;;;;;;;;;-1:-1:-1;990:42:3;9306:32:12;;1046:42:3;9344:32:12;;1123:66:3::1;1113:7;:76:::0;1205:15:::1;1199:3;:21:::0;360:1642;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806342619f66146100515780637390c7861461006c57806394985ddd14610074578063dbdff2c114610089575b600080fd5b61005a60035481565b60405190815260200160405180910390f35b60035461005a565b610087610082366004610392565b610091565b005b61005a610114565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461010e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064015b60405180910390fd5b60035550565b6002546040516370a0823160e01b8152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561017f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a391906103b4565b10156102055760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060448201526a1dda5d1a0819985d58d95d60aa1b6064820152608401610105565b610213600154600254610218565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610288929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016102b5939291906103cd565b6020604051808303816000875af11580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610439565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610352906001610462565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b600080604083850312156103a557600080fd5b50508035926020909101359150565b6000602082840312156103c657600080fd5b5051919050565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b8181101561040f578581018301518582016080015282016103f3565b81811115610421576000608083870101525b50601f01601f19169290920160800195945050505050565b60006020828403121561044b57600080fd5b8151801515811461045b57600080fd5b9392505050565b6000821982111561048357634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220ebd800819446bf106c90c472150510a201a9c5eea710c2784039d2db8ab6a67864736f6c634300080f0033",
    "sourceMap": "360:1642:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:27;;;;;;;;;160:25:48;;;148:2;133:18;463:27:3;;;;;;;1340:93;1414:12;;1340:93;;9576:207:12;;;;;;:::i;:::-;;:::i;:::-;;1482:253:3;;;:::i;9576:207:12:-;9668:10;-1:-1:-1;;;;;9682:14:12;9668:28;;9660:72;;;;-1:-1:-1;;;9660:72:12;;833:2:48;9660:72:12;;;815:21:48;872:2;852:18;;;845:30;911:33;891:18;;;884:61;962:18;;9660:72:12;;;;;;;;;1968:12:3;:25;-1:-1:-1;9576:207:12:o;1482:253:3:-;1608:3;;1575:29;;-1:-1:-1;;;1575:29:3;;1598:4;1575:29;;;1137:51:48;1525:17:3;;1608:3;-1:-1:-1;;;;;1575:4:3;:14;;;;1110:18:48;;1575:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;1554:126;;;;-1:-1:-1;;;1554:126:3;;1590:2:48;1554:126:3;;;1572:21:48;1629:2;1609:18;;;1602:30;1668:34;1648:18;;;1641:62;-1:-1:-1;;;1719:18:48;;;1712:41;1770:19;;1554:126:3;1388:407:48;1554:126:3;1697:31;1715:7;;1724:3;;1697:17;:31::i;:::-;1690:38;;1482:253;:::o;7732:1020:12:-;7809:17;7834:4;-1:-1:-1;;;;;7834:20:12;;7855:14;7871:4;7888:8;6589:1;7877:43;;;;;;;;1974:25:48;;;2030:2;2015:18;;2008:34;1962:2;1947:18;;1800:248;7877:43:12;;;;;;;;;;;;;7834:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8152:15:12;8235:16;;;;;;;;;;;;978:51:13;;;;;3567:25:48;;;3608:18;;;3601:34;;;8228:4:12;3651:18:48;;;3644:60;3720:18;;;;3713:34;;;978:51:13;;;;;;;;;;3539:19:48;;;;978:51:13;;;968:62;;;;;;;;;8682:16:12;;;;;;;:20;;8701:1;8682:20;:::i;:::-;8663:6;:16;;;;;;;;;;;;:39;;;;1535:41:13;;;;;3915:19:48;;;3950:12;;;3943:28;;;1535:41:13;;;;;;;;;3987:12:48;;;;1535:41:13;;;1525:52;;;;;8708:39:12;7732:1020;-1:-1:-1;;;;7732:1020:12:o;196:248:48:-;264:6;272;325:2;313:9;304:7;300:23;296:32;293:52;;;341:1;338;331:12;293:52;-1:-1:-1;;364:23:48;;;434:2;419:18;;;406:32;;-1:-1:-1;196:248:48:o;1199:184::-;1269:6;1322:2;1310:9;1301:7;1297:23;1293:32;1290:52;;;1338:1;1335;1328:12;1290:52;-1:-1:-1;1361:16:48;;1199:184;-1:-1:-1;1199:184:48:o;2053:766::-;2285:1;2281;2276:3;2272:11;2268:19;2260:6;2256:32;2245:9;2238:51;2219:4;2308:2;2346:6;2341:2;2330:9;2326:18;2319:34;2389:2;2384;2373:9;2369:18;2362:30;2421:6;2415:13;2464:6;2459:2;2448:9;2444:18;2437:34;2489:1;2499:141;2513:6;2510:1;2507:13;2499:141;;;2609:14;;;2605:23;;2599:30;2574:17;;;2593:3;2570:27;2563:67;2528:10;;2499:141;;;2658:6;2655:1;2652:13;2649:92;;;2729:1;2723:3;2714:6;2703:9;2699:22;2695:32;2688:43;2649:92;-1:-1:-1;2802:2:48;2781:15;-1:-1:-1;;2777:29:48;2762:45;;;;2809:3;2758:55;;2053:766;-1:-1:-1;;;;;2053:766:48:o;2824:277::-;2891:6;2944:2;2932:9;2923:7;2919:23;2915:32;2912:52;;;2960:1;2957;2950:12;2912:52;2992:9;2986:16;3045:5;3038:13;3031:21;3024:5;3021:32;3011:60;;3067:1;3064;3057:12;3011:60;3090:5;2824:277;-1:-1:-1;;;2824:277:48:o;3106:225::-;3146:3;3177:1;3173:6;3170:1;3167:13;3164:136;;;3222:10;3217:3;3213:20;3210:1;3203:31;3257:4;3254:1;3247:15;3285:4;3282:1;3275:15;3164:136;-1:-1:-1;3316:9:48;;3106:225::o",
    "linkReferences": {},
    "immutableReferences": {
      "22868": [
        {
          "start": 312,
          "length": 32
        },
        {
          "start": 540,
          "length": 32
        }
      ],
      "22870": [
        {
          "start": 156,
          "length": 32
        },
        {
          "start": 587,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "getRandomNumber()": "dbdff2c1",
    "getRandomResult()": "7390c786",
    "randomResult()": "42619f66",
    "rawFulfillRandomness(bytes32,uint256)": "94985ddd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mehdi R.\",\"custom:experimental\":\"This is only for testing use.\",\"details\":\"All function calls are currently implemented without side effects\",\"kind\":\"dev\",\"methods\":{},\"title\":\"VRF\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor inherits VRFConsumerBase Network: Mumbai Testnet Chainlink VRF Coordinator address: 0x8C7382F9D8f56b33781fE506E897a4F1e2d17255 LINK token address:                0x326C977E6efc84E512bB9C30f76E30c160eD06FB Key Hash: 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4\"},\"getRandomNumber()\":{\"notice\":\"Requests randomness\"}},\"notice\":\"You can use this contract for only the most basic simulation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/VRFConsumer.sol\":\"VRFConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":contracts/=contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":script/=script/\",\":test/=test/\"]},\"sources\":{\"contracts/core/VRFConsumer.sol\":{\"keccak256\":\"0x0bf405b5d7003ef65857026939e375af3568d64cc1d0a487e9b7138f464632bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b9408099a8c46e355c61979980c7d85e5ef4cde2a0995bdc8859805d292770\",\"dweb:/ipfs/QmNsdVRnCSUm2BXAKicKtT7ccW9R9HKRdFJpfFpToMqdxb\"]},\"node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\":{\"keccak256\":\"0xff9e7d773545a1a5d73106e72bfb429da79c1cc4d893fb62051df801d2e61469\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68ff9557dad6da8108073dadcbfe5cd1f45106c2f890443eacd3bf8d59955d4e\",\"dweb:/ipfs/QmSKYkP8wNX7MKYrCroFps62gdxEwwrZwsz4RLc6XzNkxi\"]},\"node_modules/@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol\":{\"keccak256\":\"0x2bf1168e8fe548fa990e0aeaf89ef90680f80aa31eeaf901f485df60de51d51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c72d66deaa4b0f251f3f0817f45ebceb71f5b4f94a86ac0e586de99f5af2b6\",\"dweb:/ipfs/QmcHkApHm5CAynjajcCUYppaKJ9sNWGZTEcSs4tUK8B5K5\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getRandomNumber",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRandomResult",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "randomResult",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "requestId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "randomness",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rawFulfillRandomness"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor inherits VRFConsumerBase Network: Mumbai Testnet Chainlink VRF Coordinator address: 0x8C7382F9D8f56b33781fE506E897a4F1e2d17255 LINK token address:                0x326C977E6efc84E512bB9C30f76E30c160eD06FB Key Hash: 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4"
          },
          "getRandomNumber()": {
            "notice": "Requests randomness"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":contracts/=contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":script/=script/",
        ":test/=test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/core/VRFConsumer.sol": "VRFConsumer"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/core/VRFConsumer.sol": {
        "keccak256": "0x0bf405b5d7003ef65857026939e375af3568d64cc1d0a487e9b7138f464632bd",
        "urls": [
          "bzz-raw://80b9408099a8c46e355c61979980c7d85e5ef4cde2a0995bdc8859805d292770",
          "dweb:/ipfs/QmNsdVRnCSUm2BXAKicKtT7ccW9R9HKRdFJpfFpToMqdxb"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBase.sol": {
        "keccak256": "0xff9e7d773545a1a5d73106e72bfb429da79c1cc4d893fb62051df801d2e61469",
        "urls": [
          "bzz-raw://68ff9557dad6da8108073dadcbfe5cd1f45106c2f890443eacd3bf8d59955d4e",
          "dweb:/ipfs/QmSKYkP8wNX7MKYrCroFps62gdxEwwrZwsz4RLc6XzNkxi"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol": {
        "keccak256": "0x2bf1168e8fe548fa990e0aeaf89ef90680f80aa31eeaf901f485df60de51d51b",
        "urls": [
          "bzz-raw://79c72d66deaa4b0f251f3f0817f45ebceb71f5b4f94a86ac0e586de99f5af2b6",
          "dweb:/ipfs/QmcHkApHm5CAynjajcCUYppaKJ9sNWGZTEcSs4tUK8B5K5"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
        "keccak256": "0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5",
        "urls": [
          "bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd",
          "dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/core/VRFConsumer.sol",
    "id": 1284,
    "exportedSymbols": {
      "LinkTokenInterface": [
        23060
      ],
      "VRFConsumer": [
        1283
      ],
      "VRFConsumerBase": [
        22915
      ],
      "VRFRequestIDBase": [
        22965
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1970:3",
    "nodes": [
      {
        "id": 1204,
        "nodeType": "PragmaDirective",
        "src": "33:24:3",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1205,
        "nodeType": "ImportDirective",
        "src": "59:59:3",
        "absolutePath": "node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1284,
        "sourceUnit": 22916,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1283,
        "nodeType": "ContractDefinition",
        "src": "360:1642:3",
        "nodes": [
          {
            "id": 1210,
            "nodeType": "VariableDeclaration",
            "src": "406:24:3",
            "constant": false,
            "mutability": "mutable",
            "name": "keyHash",
            "nameLocation": "423:7:3",
            "scope": 1283,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1209,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "406:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1212,
            "nodeType": "VariableDeclaration",
            "src": "436:20:3",
            "constant": false,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "453:3:3",
            "scope": 1283,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1211,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "436:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1214,
            "nodeType": "VariableDeclaration",
            "src": "463:27:3",
            "constant": false,
            "functionSelector": "42619f66",
            "mutability": "mutable",
            "name": "randomResult",
            "nameLocation": "478:12:3",
            "scope": 1283,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1213,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "463:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1235,
            "nodeType": "FunctionDefinition",
            "src": "939:391:3",
            "body": {
              "id": 1234,
              "nodeType": "Block",
              "src": "1103:227:3",
              "statements": [
                {
                  "expression": {
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1222,
                      "name": "keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1210,
                      "src": "1113:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307836653735623536396130316566353664313863616236613865373165363630306436636538353338333464346135373438623732306430366638373862336134",
                      "id": 1223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1123:66:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_49962386514484245166271493471135870425413786137407811871694296720549827097508_by_1",
                        "typeString": "int_const 4996...(69 digits omitted)...7508"
                      },
                      "value": "0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4"
                    },
                    "src": "1113:76:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "1113:76:3"
                },
                {
                  "expression": {
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1226,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1212,
                      "src": "1199:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_100000000000000_by_1",
                        "typeString": "int_const 100000000000000"
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "302e30303031",
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1205:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_10000",
                          "typeString": "rational_const 1 / 10000"
                        },
                        "value": "0.0001"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1214:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3138",
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1218:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "1214:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "1205:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000_by_1",
                        "typeString": "int_const 100000000000000"
                      }
                    },
                    "src": "1199:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "1199:21:3"
                }
              ]
            },
            "documentation": {
              "id": 1215,
              "nodeType": "StructuredDocumentation",
              "src": "519:347:3",
              "text": " Constructor inherits VRFConsumerBase\n Network: Mumbai Testnet\n Chainlink VRF Coordinator address: 0x8C7382F9D8f56b33781fE506E897a4F1e2d17255\n LINK token address:                0x326C977E6efc84E512bB9C30f76E30c160eD06FB\n Key Hash: 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "307838433733383246394438663536623333373831664535303645383937613446316532643137323535",
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "990:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x8C7382F9D8f56b33781fE506E897a4F1e2d17255"
                  },
                  {
                    "hexValue": "307833323643393737453665666338344535313262423943333066373645333063313630654430364642",
                    "id": 1219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1046:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x326C977E6efc84E512bB9C30f76E30c160eD06FB"
                  }
                ],
                "id": 1220,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1217,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22915,
                  "src": "961:15:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "961:137:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "950:2:3"
            },
            "returnParameters": {
              "id": 1221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:0:3"
            },
            "scope": 1283,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1243,
            "nodeType": "FunctionDefinition",
            "src": "1340:93:3",
            "body": {
              "id": 1242,
              "nodeType": "Block",
              "src": "1397:36:3",
              "statements": [
                {
                  "expression": {
                    "id": 1240,
                    "name": "randomResult",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1214,
                    "src": "1414:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1239,
                  "id": 1241,
                  "nodeType": "Return",
                  "src": "1407:19:3"
                }
              ]
            },
            "functionSelector": "7390c786",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomResult",
            "nameLocation": "1349:15:3",
            "parameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1364:2:3"
            },
            "returnParameters": {
              "id": 1239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "1388:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:9:3"
            },
            "scope": 1283,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1268,
            "nodeType": "FunctionDefinition",
            "src": "1482:253:3",
            "body": {
              "id": 1267,
              "nodeType": "Block",
              "src": "1544:191:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1254,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1598:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VRFConsumer_$1283",
                                    "typeString": "contract VRFConsumer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_VRFConsumer_$1283",
                                    "typeString": "contract VRFConsumer"
                                  }
                                ],
                                "id": 1253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1590:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1252,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1590:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1590:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1250,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22868,
                              "src": "1575:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$23060",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 1251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22992,
                            "src": "1575:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1575:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1257,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1212,
                          "src": "1608:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1575:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e7472616374207769746820666175636574",
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1625:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74",
                          "typeString": "literal_string \"Not enough LINK - fill contract with faucet\""
                        },
                        "value": "Not enough LINK - fill contract with faucet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74",
                          "typeString": "literal_string \"Not enough LINK - fill contract with faucet\""
                        }
                      ],
                      "id": 1249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1554:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:126:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1261,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:126:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1263,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "1715:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1264,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "1724:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1262,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22865,
                      "src": "1697:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1248,
                  "id": 1266,
                  "nodeType": "Return",
                  "src": "1690:38:3"
                }
              ]
            },
            "documentation": {
              "id": 1244,
              "nodeType": "StructuredDocumentation",
              "src": "1439:38:3",
              "text": " Requests randomness"
            },
            "functionSelector": "dbdff2c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNumber",
            "nameLocation": "1491:15:3",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1506:2:3"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1533:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "1525:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1524:19:3"
            },
            "scope": 1283,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1282,
            "nodeType": "FunctionDefinition",
            "src": "1806:194:3",
            "body": {
              "id": 1281,
              "nodeType": "Block",
              "src": "1910:90:3",
              "statements": [
                {
                  "expression": {
                    "id": 1279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1277,
                      "name": "randomResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "1968:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1278,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "1983:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1968:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1280,
                  "nodeType": "ExpressionStatement",
                  "src": "1968:25:3"
                }
              ]
            },
            "baseFunctions": [
              22809
            ],
            "documentation": {
              "id": 1269,
              "nodeType": "StructuredDocumentation",
              "src": "1741:60:3",
              "text": " Callback function used by VRF Coordinator"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "1815:17:3",
            "overrides": {
              "id": 1275,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1897:8:3"
            },
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1841:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1282,
                  "src": "1833:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nameLocation": "1860:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1282,
                  "src": "1852:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1852:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1832:39:3"
            },
            "returnParameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1910:0:3"
            },
            "scope": 1283,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1207,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22915,
              "src": "384:15:3"
            },
            "id": 1208,
            "nodeType": "InheritanceSpecifier",
            "src": "384:15:3"
          }
        ],
        "canonicalName": "VRFConsumer",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1206,
          "nodeType": "StructuredDocumentation",
          "src": "120:239:3",
          "text": "@title VRF\n @author Mehdi R.\n @notice You can use this contract for only the most basic simulation\n @dev All function calls are currently implemented without side effects\n @custom:experimental This is only for testing use."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1283,
          22915,
          22965
        ],
        "name": "VRFConsumer",
        "nameLocation": "369:11:3",
        "scope": 1284,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 3
}