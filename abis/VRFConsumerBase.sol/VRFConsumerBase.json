{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "rawFulfillRandomness(bytes32,uint256)": "94985ddd"
  },
  "ast": {
    "absolutePath": "node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
    "id": 28776,
    "exportedSymbols": {
      "LinkTokenInterface": [
        28920
      ],
      "VRFConsumerBase": [
        28775
      ],
      "VRFRequestIDBase": [
        28825
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9754:37",
    "nodes": [
      {
        "id": 28656,
        "nodeType": "PragmaDirective",
        "src": "32:23:37",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 28657,
        "nodeType": "ImportDirective",
        "src": "57:45:37",
        "absolutePath": "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
        "file": "./interfaces/LinkTokenInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28776,
        "sourceUnit": 28921,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28658,
        "nodeType": "ImportDirective",
        "src": "104:32:37",
        "absolutePath": "node_modules/@chainlink/contracts/src/v0.8/VRFRequestIDBase.sol",
        "file": "./VRFRequestIDBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28776,
        "sourceUnit": 28826,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28775,
        "nodeType": "ContractDefinition",
        "src": "5360:4425:37",
        "nodes": [
          {
            "id": 28669,
            "nodeType": "FunctionDefinition",
            "src": "6062:83:37",
            "documentation": {
              "id": 28662,
              "nodeType": "StructuredDocumentation",
              "src": "5418:641:37",
              "text": " @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBase expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomness the VRF output"
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "6071:17:37",
            "parameters": {
              "id": 28667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28664,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "6097:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 28669,
                  "src": "6089:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28663,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6089:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28666,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nameLocation": "6116:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 28669,
                  "src": "6108:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6108:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6088:39:37"
            },
            "returnParameters": {
              "id": 28668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6144:0:37"
            },
            "scope": 28775,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 28673,
            "nodeType": "VariableDeclaration",
            "src": "6540:50:37",
            "constant": true,
            "documentation": {
              "id": 28670,
              "nodeType": "StructuredDocumentation",
              "src": "6149:388:37",
              "text": " @dev In order to keep backwards compatibility we have kept the user\n seed field around. We remove the use of it because given that the blockhash\n enters later, it overrides whatever randomness the used seed provides.\n Given that it adds no security, and can easily lead to misunderstandings,\n we have removed it from usage and can now provide a simpler API."
            },
            "mutability": "constant",
            "name": "USER_SEED_PLACEHOLDER",
            "nameLocation": "6565:21:37",
            "scope": 28775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28671,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6540:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 28672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6589:1:37",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "id": 28725,
            "nodeType": "FunctionDefinition",
            "src": "7732:1020:37",
            "body": {
              "id": 28724,
              "nodeType": "Block",
              "src": "7828:924:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28686,
                        "name": "vrfCoordinator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28730,
                        "src": "7855:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28687,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28678,
                        "src": "7871:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28690,
                            "name": "_keyHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28676,
                            "src": "7888:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 28691,
                            "name": "USER_SEED_PLACEHOLDER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28673,
                            "src": "7898:21:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 28688,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7877:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 28689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7877:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 28692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7877:43:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 28683,
                        "name": "LINK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28728,
                        "src": "7834:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$28920",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 28685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28908,
                      "src": "7834:20:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                      }
                    },
                    "id": 28693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7834:87:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28694,
                  "nodeType": "ExpressionStatement",
                  "src": "7834:87:37"
                },
                {
                  "assignments": [
                    28696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28696,
                      "mutability": "mutable",
                      "name": "vRFSeed",
                      "nameLocation": "8160:7:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 28724,
                      "src": "8152:15:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28695,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8152:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28708,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 28698,
                        "name": "_keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28676,
                        "src": "8187:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 28699,
                        "name": "USER_SEED_PLACEHOLDER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28673,
                        "src": "8197:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28702,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8228:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VRFConsumerBase_$28775",
                              "typeString": "contract VRFConsumerBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VRFConsumerBase_$28775",
                              "typeString": "contract VRFConsumerBase"
                            }
                          ],
                          "id": 28701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8220:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 28700,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8220:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8220:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 28704,
                          "name": "nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28734,
                          "src": "8235:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                            "typeString": "mapping(bytes32 => uint256)"
                          }
                        },
                        "id": 28706,
                        "indexExpression": {
                          "id": 28705,
                          "name": "_keyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28676,
                          "src": "8242:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8235:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28697,
                      "name": "makeVRFInputSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28805,
                      "src": "8170:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,uint256,address,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 28707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8170:82:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8152:100:37"
                },
                {
                  "expression": {
                    "id": 28717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28709,
                        "name": "nonces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28734,
                        "src": "8663:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 28711,
                      "indexExpression": {
                        "id": 28710,
                        "name": "_keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28676,
                        "src": "8670:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8663:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 28716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 28712,
                          "name": "nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28734,
                          "src": "8682:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                            "typeString": "mapping(bytes32 => uint256)"
                          }
                        },
                        "id": 28714,
                        "indexExpression": {
                          "id": 28713,
                          "name": "_keyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28676,
                          "src": "8689:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8682:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 28715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8701:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8682:20:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8663:39:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28718,
                  "nodeType": "ExpressionStatement",
                  "src": "8663:39:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28720,
                        "name": "_keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28676,
                        "src": "8729:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 28721,
                        "name": "vRFSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28696,
                        "src": "8739:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28719,
                      "name": "makeRequestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28824,
                      "src": "8715:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 28722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8715:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 28682,
                  "id": 28723,
                  "nodeType": "Return",
                  "src": "8708:39:37"
                }
              ]
            },
            "documentation": {
              "id": 28674,
              "nodeType": "StructuredDocumentation",
              "src": "6595:1134:37",
              "text": " @notice requestRandomness initiates a request for VRF output given _seed\n @dev The fulfillRandomness method receives the output, once it's provided\n @dev by the Oracle, and verified by the vrfCoordinator.\n @dev The _keyHash must already be registered with the VRFCoordinator, and\n @dev the _fee must exceed the fee specified during registration of the\n @dev _keyHash.\n @dev The _seed parameter is vestigial, and is kept only for API\n @dev compatibility with older versions. It can't *hurt* to mix in some of\n @dev your own randomness, here, but it's not necessary because the VRF\n @dev oracle will mix the hash of the block containing your request into the\n @dev VRF seed it ultimately uses.\n @param _keyHash ID of public key against which randomness is generated\n @param _fee The amount of LINK to send with the request\n @return requestId unique ID for this request\n @dev The returned requestId can be used to distinguish responses to\n @dev concurrent requests. It is passed as the first argument to\n @dev fulfillRandomness."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestRandomness",
            "nameLocation": "7741:17:37",
            "parameters": {
              "id": 28679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28676,
                  "mutability": "mutable",
                  "name": "_keyHash",
                  "nameLocation": "7767:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 28725,
                  "src": "7759:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28675,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7759:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28678,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "7785:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 28725,
                  "src": "7777:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7777:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7758:32:37"
            },
            "returnParameters": {
              "id": 28682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28681,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "7817:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 28725,
                  "src": "7809:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28680,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7809:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7808:19:37"
            },
            "scope": 28775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 28728,
            "nodeType": "VariableDeclaration",
            "src": "8756:42:37",
            "constant": false,
            "mutability": "immutable",
            "name": "LINK",
            "nameLocation": "8794:4:37",
            "scope": 28775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$28920",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 28727,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28726,
                "name": "LinkTokenInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28920,
                "src": "8756:18:37"
              },
              "referencedDeclaration": 28920,
              "src": "8756:18:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$28920",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 28730,
            "nodeType": "VariableDeclaration",
            "src": "8802:40:37",
            "constant": false,
            "mutability": "immutable",
            "name": "vrfCoordinator",
            "nameLocation": "8828:14:37",
            "scope": 28775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28729,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "8802:7:37",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 28734,
            "nodeType": "VariableDeclaration",
            "src": "8982:72:37",
            "constant": false,
            "mutability": "mutable",
            "name": "nonces",
            "nameLocation": "9048:6:37",
            "scope": 28775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 28733,
              "keyType": {
                "id": 28731,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "8990:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "8982:27:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 28732,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "9001:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 28753,
            "nodeType": "FunctionDefinition",
            "src": "9248:133:37",
            "body": {
              "id": 28752,
              "nodeType": "Block",
              "src": "9300:81:37",
              "statements": [
                {
                  "expression": {
                    "id": 28744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28742,
                      "name": "vrfCoordinator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28730,
                      "src": "9306:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28743,
                      "name": "_vrfCoordinator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28737,
                      "src": "9323:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9306:32:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28745,
                  "nodeType": "ExpressionStatement",
                  "src": "9306:32:37"
                },
                {
                  "expression": {
                    "id": 28750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28746,
                      "name": "LINK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28728,
                      "src": "9344:4:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$28920",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28748,
                          "name": "_link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28739,
                          "src": "9370:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28747,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28920,
                        "src": "9351:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$28920_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 28749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9351:25:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$28920",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "9344:32:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$28920",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 28751,
                  "nodeType": "ExpressionStatement",
                  "src": "9344:32:37"
                }
              ]
            },
            "documentation": {
              "id": 28735,
              "nodeType": "StructuredDocumentation",
              "src": "9059:186:37",
              "text": " @param _vrfCoordinator address of VRFCoordinator contract\n @param _link address of LINK token contract\n @dev https://docs.chain.link/docs/link-token-contracts"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28737,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "9268:15:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 28753,
                  "src": "9260:23:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9260:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28739,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "9293:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 28753,
                  "src": "9285:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9285:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9259:40:37"
            },
            "returnParameters": {
              "id": 28741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9300:0:37"
            },
            "scope": 28775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 28774,
            "nodeType": "FunctionDefinition",
            "src": "9576:207:37",
            "body": {
              "id": 28773,
              "nodeType": "Block",
              "src": "9654:129:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 28764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28761,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9668:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 28762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9668:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 28763,
                          "name": "vrfCoordinator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28730,
                          "src": "9682:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9668:28:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c",
                        "id": 28765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9698:33:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445",
                          "typeString": "literal_string \"Only VRFCoordinator can fulfill\""
                        },
                        "value": "Only VRFCoordinator can fulfill"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445",
                          "typeString": "literal_string \"Only VRFCoordinator can fulfill\""
                        }
                      ],
                      "id": 28760,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9660:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9660:72:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28767,
                  "nodeType": "ExpressionStatement",
                  "src": "9660:72:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28769,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28755,
                        "src": "9756:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 28770,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28757,
                        "src": "9767:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28768,
                      "name": "fulfillRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28669,
                      "src": "9738:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 28771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9738:40:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28772,
                  "nodeType": "ExpressionStatement",
                  "src": "9738:40:37"
                }
              ]
            },
            "functionSelector": "94985ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rawFulfillRandomness",
            "nameLocation": "9585:20:37",
            "parameters": {
              "id": 28758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28755,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "9614:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 28774,
                  "src": "9606:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28754,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9606:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28757,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nameLocation": "9633:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 28774,
                  "src": "9625:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9625:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9605:39:37"
            },
            "returnParameters": {
              "id": 28759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9654:0:37"
            },
            "scope": 28775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 28660,
              "name": "VRFRequestIDBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28825,
              "src": "5397:16:37"
            },
            "id": 28661,
            "nodeType": "InheritanceSpecifier",
            "src": "5397:16:37"
          }
        ],
        "canonicalName": "VRFConsumerBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28659,
          "nodeType": "StructuredDocumentation",
          "src": "138:5221:37",
          "text": "****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator, _link) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash), and have told you the minimum LINK\n @dev price for VRF service. Make sure your contract has sufficient LINK, and\n @dev call requestRandomness(keyHash, fee, seed), where seed is the input you\n @dev want to generate randomness from.\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomness method.\n @dev The randomness argument to fulfillRandomness is the actual random value\n @dev generated from your seed.\n @dev The requestId argument is generated from the keyHash and the seed by\n @dev makeRequestId(keyHash, seed). If your contract could have concurrent\n @dev requests open, you can use the requestId to track which seed is\n @dev associated with which randomness. See VRFRequestIDBase.sol for more\n @dev details. (See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.)\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ. (Which is critical to making unpredictable randomness! See the\n @dev next section.)\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the ultimate input to the VRF is mixed with the block hash of the\n @dev block in which the request is made, user-provided seeds have no impact\n @dev on its economic security properties. They are only included for API\n @dev compatability with previous versions of this contract.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          28775,
          28825
        ],
        "name": "VRFConsumerBase",
        "nameLocation": "5378:15:37",
        "scope": 28776,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 37
}